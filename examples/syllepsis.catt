// Syllepsis - needs --sua flag

def swap = coh [ x{f{a}g}y{h{b}k}z
               : comp[comp [[a],h], comp[g,[b]]]
                 ->
                 comp[comp [f,[b]], comp [[a],k]]
               ]

def swapinv = coh [ x{f{a}g}y{h{b}k}z
                  : comp[comp[f,[b]], comp[[a],k]]
                    ->
                    comp[comp[[a],h], comp[g,[b]]]
                  ]

def swapnatleft = coh [ u{x{f{a}g}y}v{s{h}t}w
                      : comp[ comp [ [comp [[[a]],s]],
		      	       	       comp [y,[h]]
				     ],
			       swap(g,h)
			     ]
                        ->
                        comp[ swap(f,h),
			       comp[ comp [x,[h]],
			              [comp[[[a]],t]]
				    ]
			     ]
                      ]

def swapnatright = coh [ u{x{g}y}v{s{h{b}k}t}w
                       : comp[ comp [ comp [[g],s],
		       	 	        [comp[y,[[b]]]]
			              ],
			        swap(g,k)
			      ]
                         ->
                         comp[ swap(g,h),
			        comp[ [comp[x,[[b]]]],
				       comp[[g],t]
				     ]
		              ]
                       ]

def left u{x{f{a}g}y}v{s{h{b}k}t}w
  = comp [
            comp [
		    [swap(comp[[[a]],s], comp[y,[[b]]])],
		    swap(g,k)
		  ],
	    comp [
		    comp [comp [[f],s], [comp [y,[[b]]]]],
		    [swapnatleft(a,k)]
		  ],
	    comp [
		    [swapnatright(f,b)],
		    comp [comp [x,[k]], [comp [[[a]],t]]]
		  ]
	  ]



def right u{x{f{a}g}y}v{s{h{b}k}t}w
  = comp [
	    comp [
		    comp [[comp [[[a]],s]], comp [y,[h]]],
		    [swapnatright(g,b)]
		  ],
	    comp [
		    [swapnatleft(a,h)],
		    comp [[comp [x,[[b]]]], comp [[g],t]]
		  ],
	    comp [
		    swap(f,h),
		    [swapinv(comp[x,[[b]]], comp[[[a]],t])]
		  ]
	  ]

def syl_coh = coh [ u{x{f{a}g}y}v{s{h{b}k}t}w
                  : left(a,b)
                    ->
                    right(a,b)
                  ]

normalise (x : *) (a : id(id(x)) -> id(id(x))) (b : id(id(x)) -> id(id(x))) | left(a,b)

normalise (x : *) (a : id(id(x)) -> id(id(x))) (b : id(id(x)) -> id(id(x))) | right(a,b)

def syllepsis (x : *) (a : id(id(x)) -> id(id(x))) (b : id(id(x)) -> id(id(x)))
  : swap(a,b) -> swapinv(b,a)
  = syl_coh(a,b)

import syllepsis-su

assert (x : *) (a : id(id(x)) -> id(id(x))) (b : id(id(x)) -> id(id(x))) | syllepsis(x,a,b) = syllepsis_su(x,a,b)

size (x : *) (a : id(id(x)) -> id(id(x))) (b : id(id(x)) -> id(id(x))) | syllepsis(x,a,b)
