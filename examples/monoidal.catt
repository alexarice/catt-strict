// Basic monoidal category definitions

def comp1coh [f,g] = coh [ x{}{}z : x -> z ] (f,g)

def comp1 [f,g] = comp
assert comp1coh(f,g) = comp1(f,g) in [f,g]

normalise comp1(comp1(f,g),h) in [f,g,h]

def horiz [[a],[b]] = comp

def vert [[a,b]] = comp

def vertsusp [[a,b]] = comp1[a,b]
assert vert(a,b) = vertsusp(a,b) in [[a,b]]

def unitor_l = coh [ x{f}y : comp1(id(x),f) -> f ]

def unitor_r = coh [ x{f}y : comp1(f, id(y)) -> f ]

def assoc = coh [ {f}{g}{h} : comp1(comp1(f,g),h) -> comp1(f,comp1(g,h)) ]

def triangle = coh [ x{f}y{g}z
                   : vert(assoc(f,id(y),g), horiz(id(f),unitor_l(g)))
                     ->
                     horiz(unitor_r(f),id(g))
                   ]

normalise triangle(f,g) in x{f}y{g}z

def pentagon = coh [ v{f}w{g}x{h}y{i}z
    	       	   : vert(assoc(comp1(f,g),h,i),assoc(f,g,comp1(h,i)))
		     ->
		     comp [
		       horiz(assoc(f,g,h),id(i)),
		       assoc(f,comp1(g,h),i),
		       horiz(id(f),assoc(g,h,i))
		     ]
		   ]

normalise pentagon(f,g,h,i) in v{f}w{g}x{h}y{i}z
